#							-*- autoconf -*-

AT_BANNER([Compatibility with other tools.])

## -------------------- ##
## Autoconf & Libtool.  ##
## -------------------- ##

AT_SETUP([[Autoconf & Libtool]])

# Skip this test if there is no libtoolize.
AT_CHECK([libtoolize --version || exit 77],
         ignore, ignore, ignore)
# CVS Autoconf does not work with Libtool 1.3.5.
AT_CHECK([[libtoolize --version | grep '1.3.[012345]' && exit 77]],
         ignore, ignore, ignore)

# FIXME: Once Libtool `configure.ac' aware, change this.
# Using a configure.in, have libtoolize confess where libtool.m4 is.
AT_DATA([configure.in],
[[AC_INIT
AC_CONFIG_AUX_DIR(.)
AC_PROG_LIBTOOL
]])
AT_CHECK([libtoolize | sed -n ["s,^.*\`\(/[^']*\)'.*,\1,p"] >at-path],
         0, [], ignore)

# Make sure at-path contains something valid, and let the test suite
# display it when verbose.  And fail, skipping would too easily hide
# problems.
AT_CHECK([grep . at-path], 0, [ignore])
AT_CHECK([test -f "`cat at-path`"])

# Build the concatenation of libtool.m4 and configure.ac.
cp `cat at-path` configure.in
cat >>configure.in <<_EOF
AC_INIT
AC_CONFIG_AUX_DIR(.)
AC_PROG_LIBTOOL
_EOF

AT_CHECK_AUTOCONF

touch install-sh
AT_CHECK_CONFIGURE

AT_CLEANUP(install-sh ltconfig libtool at-path ltmain.sh config.guess config.sub)
