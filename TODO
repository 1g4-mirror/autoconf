-*- outline -*-

Things it might be nice to do someday:

------------------------------------------------------------------------------

* Make AC_CHECK_LIB check whether the function is already available
  before checking for the library.  This might involve adding another
  kind of cache variable to indicate whether a given function needs a
  given library.  The current ac_cv_func_ variables are intended to
  indicate whether the function is in the default libraries, but
  actually also take into account whatever value LIBS had when they
  were checked for.

------------------------------------------------------------------------------

* Add AC_PROG_CC_POSIX to replace the current ad-hoc macros for AIX,
  Minix, ISC, etc.

------------------------------------------------------------------------------

* Use AC_EGREP_CPP instead of AC_TRY_LINK to detect structures and members.

------------------------------------------------------------------------------

* Make AC_CHECK_FUNC[S] automatically use any particular macros for the
  listed functions.

------------------------------------------------------------------------------

* Support creating both config.h and DEFS in the same configure.

------------------------------------------------------------------------------

* Select the right CONFIG_SHELL automatically (for Ultrix, Lynx especially.)

------------------------------------------------------------------------------

* Doc: Add concept index.

------------------------------------------------------------------------------

* Doc: Centralize information on POSIX, MS-DOS, cross-compiling, and
  other important topics.

------------------------------------------------------------------------------

* Split up AC_SUBST substitutions using a loop to accomodate shells
  with severely limited here document sizes, if it turns out to be a problem.
  I'm not sure whether the limit is on lines or bytes; if bytes, it
  will be less of a problem than it was with the long lines used for
  creating a header file.
  There has also been a report that HPUX and OSF/1 seds only allow 100
  commands.

------------------------------------------------------------------------------

* Allow [ and ] in egrep patterns and AC_DEFINE args.

------------------------------------------------------------------------------

* Add a Makefile generator that supports the standard GNU targets.
  (Being worked on.)

------------------------------------------------------------------------------

* Mike Haertel's suggestions:

** Provide header files containing decls for alloca, strings, etc.

** Cross compiling:

*** Error messages include instructions for overriding defaults using
config.site.

*** Distribute a config.site corresponding to a hypothetical bare POSIX system with c89.

*** Cache consistency checking: ignore cache if environment
(CC or PATH) differs.

** Site defaults:

*** Convention for consistency checking of env vars and options in config.site so config.site can print obnoxious messages if it doesn't like options or env vars that users use.

------------------------------------------------------------------------------

* autoscan: Tell the files that caused inclusion of each macro,
in a dnl comment.  (Seems to be hard.)

------------------------------------------------------------------------------

* Look at user contributed macros: prototypes, IEEE double precision math, 
shared libraries, various other things.

------------------------------------------------------------------------------

For AC_TYPE_SIGNAL signal handlers, provide a way for code to know
whether to do "return 0" or "return" (int vs void) to avoid compiler
warnings.  (Roland McGrath)

------------------------------------------------------------------------------

It would be very useful if autoconf allowed checking for multiple libraries
that are required together.  For example:

AC_HAVE_LIBRARY([-lsocket -lnsl], [LIBS="$LIBS -lsocket -lnsl"])

I have been informed that SVR4 requires both -lnsl to be used with -lsocket,
so a test just for -lsocket fails, as that will not compile.
From: markd@grizzly.COM (Mark Diekhans)

------------------------------------------------------------------------------

In config.status comment, put the host/target/build types, if used.

------------------------------------------------------------------------------

Support a way of including makefile fragments that then have @var@
substitutions done on them.

------------------------------------------------------------------------------

Have AC_CANONICAL_HOST cache the host/build/target types.

------------------------------------------------------------------------------

	AC_OUTPUT(Makefile.out:Makefile.in)
generates 
	trap 'rm -f Makefile.out:Makefile.in; exit 1' 1 2 15

------------------------------------------------------------------------------

Look at contributions:
	ac_include (Karl Berry)
	tool_prefix (Roland McGrath)
	aclocal.h tom@basil.icce.rug.NL (Tom R.Hageman)
	inline rewrite (Jim Avera)
	getpgrp and stringize (Arnold Robbins)
	caching AC_DECL_YYTEXT (Karl Berry, John something)

------------------------------------------------------------------------------

     The argument HELP-STRING is a description of the option which
     ...
     Avoid tabs in the help string.  You'll need to enclose it in `['
     and `]' in order to produce the leading spaces.

Except that [...] is the convention for telling the user the default,
So I guess a changequote(`,') or something would be in order in some cases.
From: "K. Berry" <kb@cs.umb.edu>

------------------------------------------------------------------------------

I would find it a wonderful boon if config.log contained not just the
output from the compilers, but also the invocation. Almost all
the errors I've found are due to the wrong options getting passed for
one reason or another.

Saving the input test file(s) that failed would be useful, too.
From: "K. Berry" <kb@cs.umb.edu>

------------------------------------------------------------------------------

The default of unlimited permission is fine, but there should be some easy
way for configure to have copyright terms passed through from configure.in.
Maybe AC_LICENSE([...]).
From: roland@gnu.ai.mit.edu (Roland McGrath)

------------------------------------------------------------------------------

autoconf-2.1 AC_EGREP_HEADER does not work if [square brackets] 
are used in the egrep pattern.  This makes egrep fairly useless to
find, for example, a space or tab followed by something.

Putting changequotes around the PATTERN parameter makes no difference.
-Jim Avera (jima@netcom.com)

------------------------------------------------------------------------------

AC_MSG_CHECKING([checking for ANSI #stringize])
AC_REVISION([ #(@) revision 2.1 ])

causes bogus code to be generated for whatever immediately follows.  The
problem goes away if the '#' is removed.  Probably the macros are not
disabling the m4 "comment" feature when processing user-supplied strings.
-Jim Avera jima@netcom.com

------------------------------------------------------------------------------

- I would like the default behavior of the library command to change
so that the newly tested library is tried in front of $LIBS instead of
after it.  This makes it possible to test for more complicated sets of
dependencies.  For instance: on some SVR4 systems (e.g. Sequent),
-lsocket requires -linet and -lnsl.  The link order must be
"-lsocket -linet -lnsl".  On some other SVR4 systems either -linet or
-lnsl does not exist.  Now if I test for -lnsl first, the test for
-linet fails because it tries "-lnsl -linet"; but if I test for
-linet it fails because it only works if -lnsl is also specified.
--Guido van Rossum, CWI, Amsterdam <mailto:Guido.van.Rossum@cwi.nl>

------------------------------------------------------------------------------

on hal.gnu.ai.mit.edu, configure is getting the wrong answer for
AC_CHECK_FUNCS(select).

The problem here is that there's severe namespace pollution: when
conftest.c includes <ctype.h> to pick up any __stub macro definitions,
it's getting a prototype declaration for select(), which collides
with the dummy declaration in conftest.c.  (The chain of includes
is conftest.c -> <ctype.h> -> <sys/localedef.h> -> <sys/lc_core.h>
-> <sys/types.h> -> <sys/select.h>.)

	#define $ac_func __dummy_$ac_func
	#include <ctype.h>
	#undef $ac_func
From: kwzh@gnu.ai.mit.edu (Karl Heuer)

------------------------------------------------------------------------------

put all the config.* stuff somewhere like config/?
All these extrainious file sure clutter up a toplevel directory.
From: "Randall S. Winchester" <rsw@eng.umd.edu>

------------------------------------------------------------------------------

It would be nice if I could (in the Makefile.in files) set
the path to config.h. You have config.h ../config.h ../../config.h's all 
over the place, in the findutils-4.1 directory.
From: "Randall S. Winchester" <rsw@eng.umd.edu>

------------------------------------------------------------------------------

    define([AC_DEFUN],
    [define($1, [AC_PRO([$1])[$2][]AC_EPI()])])
to fix a quoting bug (Noah Friedman).

------------------------------------------------------------------------------

* Test suite: more things to test:
** That the shell scripts produce correct output on some simple data.
** Configuration header files.  That autoheader does the right thing,
   and so does AC_CONFIG_HEADER when autoconf is run.

------------------------------------------------------------------------------
